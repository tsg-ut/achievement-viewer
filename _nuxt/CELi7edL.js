import{_ as l}from"./Cmp89RWd.js";import{_ as d,A as u,c as s,B as p,a as o,F as _,C as h,o as a,b as f}from"./DzNLpZrd.js";import"./CyPApcYk.js";import"./Cpj98o6Y.js";import"./eOB3lXTA.js";const v={data(){return{isLoading:!0}},async fetch({store:e}){},head(){return{title:"実績一覧 - achievement-viewer"}},computed:{...u({achievementData:e=>e.achievementData.list}),ranking(){const e=this.achievementData.slice();return e.sort((t,n)=>(n.count||0)-(t.count||0)),e}},mounted(){Promise.all([this.$store.dispatch("achievementData/initList"),this.$store.dispatch("users/initList")]).then(()=>{this.isLoading=!1})}},g={class:"container"},x={key:0,class:"progress is-small is-primary",max:"100"},k={class:"columns is-multiline"};function L(e,t,n,y,c,i){const m=l;return a(),s("div",g,[c.isLoading?(a(),s("progress",x)):p("",!0),t[0]||(t[0]=o("p",{class:"title"},"実績一覧",-1)),o("div",k,[(a(!0),s(_,null,h(i.ranking,r=>(a(),s("div",{key:r.id,class:"column is-half"},[f(m,{achievement:r,"count-max":i.ranking[0].count},null,8,["achievement","count-max"])]))),128))])])}const $=d(v,[["render",L]]);export{$ as default};
